# SPDX-FileCopyrightText: 2023 Klar√§lvdalens Datakonsult AB, a KDAB Group company <info@kdab.com>
#
# SPDX-License-Identifier: MIT

name: CI

  push:
    branches:
      - master
      - kdreports-2.2
  pull_request:
    branches:
      - master
      - kdreports-2.2

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-22.04
          - windows-2022
          - macos-13

        build_type:
          - Debug
          - Release

        qt:
          - version: "5.15.2"
            requested: "5.15"
          - version: "6.3.2"  # Qt 6.3 is not an LTS version, so '6.3.*' always resolves to '6.3.2'
            requested: "6.3.*"

            commonCMakeArgs=["--warn-uninitialized",
                 "-Werror=dev",
                 "-DKDReports_TESTS=TRUE",
                 "-DKDReports_EXAMPLES=TRUE"
                ]

    steps:
      - name: Install Qt with options and default aqtversion
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: null # use whatever the default is
          modules: ${{ matrix.qt.modules }}
          version: ${{ matrix.qt.requested }}
          cache: true

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install ninja-build tool (must be after Qt due PATH changes)
        uses: turtlesec-no/get-ninja@main

      - name: Make sure MSVC is found when Ninja generator is in use
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure project
        run: >
          cmake -S . -B ./build -G Ninja
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          --warn-uninitialized
          -Werror=dev
          -DKDReports_QT6=${{ startsWith(matrix.qt.version, '6.') }}
          -DKDReports_TESTS=${{ matrix.build_type == 'Debug' }}
          -DKDReports_EXAMPLES=${{ matrix.build_type == 'Debug' }}
          -DKDReports_DOCS=${{ matrix.build_type == 'Debug' && runner.os == 'Linux' }}

      - name: Build Project
        run: cmake --build ./build

      - name: Run tests on Linux (offscreen)
        id: ctest_linux
        if: ${{ matrix.build_type == 'Debug' && runner.os == 'Linux' }}
        run: ctest --test-dir ./build -C ${{ matrix.build_type }} --output-on-failure
        env:
          QT_QPA_PLATFORM: offscreen

      - name: Run tests on Windown/macOS
        id: ctest_non_linux
        if: ${{ matrix.build_type == 'Debug' && runner.os != 'Linux' }}
        run: ctest --test-dir ./build -C ${{ matrix.build_type }} --output-on-failure

      - name: Read tests log when it fails
        uses: andstor/file-reader-action@v1
        if: ${{ steps.ctest_non_linux.conclusion == 'failure' || steps.ctest_linux.conclusion == 'failure' }}
        with:
          path: "./build/Testing/Temporary/LastTest.log"
